[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "italian_lessons",
    "section": "",
    "text": "lesson\n\n\n\n\n\n\n\n\n\n\n\nSep 28, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlesson\n\n\n\n\n\n\n\n\n\n\n\nSep 21, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlesson\n\n\n\n\n\n\n\n\n\n\n\nSep 14, 2022\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Lib/site-packages/httpcore-0.9.1.dist-info/LICENSE.html",
    "href": "Lib/site-packages/httpcore-0.9.1.dist-info/LICENSE.html",
    "title": "italian_lessons",
    "section": "",
    "text": "Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "Lib/site-packages/httpx-0.13.3.dist-info/LICENSE.html",
    "href": "Lib/site-packages/httpx-0.13.3.dist-info/LICENSE.html",
    "title": "italian_lessons",
    "section": "",
    "text": "Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "Lib/site-packages/ipykernel-6.16.0.dist-info/licenses/COPYING.html",
    "href": "Lib/site-packages/ipykernel-6.16.0.dist-info/licenses/COPYING.html",
    "title": "italian_lessons",
    "section": "",
    "text": "This project is licensed under the terms of the Modified BSD License (also known as New or Revised or 3-Clause BSD), as follows:\n\nCopyright (c) 2015, IPython Development Team\n\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the IPython Development Team nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nThe IPython Development Team is the set of all contributors to the IPython project. This includes all of the IPython subprojects.\nThe core team that coordinates development on GitHub can be found here: https://github.com/ipython/.\n\n\n\nIPython uses a shared copyright model. Each contributor maintains copyright over their contributions to IPython. But, it is important to note that these contributions are typically only changes to the repositories. Thus, the IPython source code, in its entirety is not the copyright of any single person or institution. Instead, it is the collective copyright of the entire IPython Development Team. If individual contributors want to maintain a record of what changes/contributions they have specific copyright on, they should indicate their copyright in the commit message of the change, when they commit the change to one of the IPython repositories.\nWith this in mind, the following banner should be used in any source code file to indicate the copyright and license terms:\n# Copyright (c) IPython Development Team.\n# Distributed under the terms of the Modified BSD License."
  },
  {
    "objectID": "Lib/site-packages/jupyter_client-7.3.5.dist-info/licenses/COPYING.html",
    "href": "Lib/site-packages/jupyter_client-7.3.5.dist-info/licenses/COPYING.html",
    "title": "italian_lessons",
    "section": "",
    "text": "This project is licensed under the terms of the Modified BSD License (also known as New or Revised or 3-Clause BSD), as follows:\n\nCopyright (c) 2001-2015, IPython Development Team\nCopyright (c) 2015-, Jupyter Development Team\n\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the Jupyter Development Team nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nThe Jupyter Development Team is the set of all contributors to the Jupyter project. This includes all of the Jupyter subprojects.\nThe core team that coordinates development on GitHub can be found here: https://github.com/jupyter/.\n\n\n\nJupyter uses a shared copyright model. Each contributor maintains copyright over their contributions to Jupyter. But, it is important to note that these contributions are typically only changes to the repositories. Thus, the Jupyter source code, in its entirety is not the copyright of any single person or institution. Instead, it is the collective copyright of the entire Jupyter Development Team. If individual contributors want to maintain a record of what changes/contributions they have specific copyright on, they should indicate their copyright in the commit message of the change, when they commit the change to one of the Jupyter repositories.\nWith this in mind, the following banner should be used in any source code file to indicate the copyright and license terms:\n# Copyright (c) Jupyter Development Team.\n# Distributed under the terms of the Modified BSD License."
  },
  {
    "objectID": "Lib/site-packages/jupyter_core-4.11.1.dist-info/license_files/COPYING.html",
    "href": "Lib/site-packages/jupyter_core-4.11.1.dist-info/license_files/COPYING.html",
    "title": "italian_lessons",
    "section": "",
    "text": "Jupyter is licensed under the terms of the Modified BSD License (also known as New or Revised or 3-Clause BSD), as follows:\n\nCopyright (c) 2015-, Jupyter Development Team\n\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the Jupyter Development Team nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nThe Jupyter Development Team is the set of all contributors to the Jupyter project. This includes all of the Jupyter subprojects. A full list with details is kept in the documentation directory, in the file about/credits.txt.\nThe core team that coordinates development on GitHub can be found here: https://github.com/ipython/.\n\n\n\nJupyter uses a shared copyright model. Each contributor maintains copyright over their contributions to Jupyter. It is important to note that these contributions are typically only changes to the repositories. Thus, the Jupyter source code in its entirety is not the copyright of any single person or institution. Instead, it is the collective copyright of the entire Jupyter Development Team. If individual contributors want to maintain a record of what changes/contributions they have specific copyright on, they should indicate their copyright in the commit message of the change, when they commit the change to one of the Jupyter repositories.\nWith this in mind, the following banner should be used in any source code file to indicate the copyright and license terms:\n# Copyright (c) Jupyter Development Team.\n# Distributed under the terms of the Modified BSD License."
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/Autokill.html",
    "href": "Lib/site-packages/nbclient/tests/files/Autokill.html",
    "title": "italian_lessons",
    "section": "",
    "text": "import os\nimport signal\npid = os.getpid()\nos.kill(pid, signal.SIGTERM)"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/Check History in Memory.html",
    "href": "Lib/site-packages/nbclient/tests/files/Check History in Memory.html",
    "title": "italian_lessons",
    "section": "",
    "text": "ip = get_ipython()\nassert ip.history_manager.hist_file == ':memory:'"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/Clear Output.html",
    "href": "Lib/site-packages/nbclient/tests/files/Clear Output.html",
    "title": "italian_lessons",
    "section": "",
    "text": "for i in range(10):\n    clear_output()\n    print(i)\n\n9\n\n\n\nprint(\"Hello world\")\nclear_output()\n\n\nprint(\"Hello world\", end='')\nclear_output(wait=True)  # no output after this\n\nHello world\n\n\n\nprint(\"Hello\", end='')\nclear_output(wait=True)  # here we have new output after wait=True\nprint(\"world\", end='')\n\nworld\n\n\n\nhandle0 = display(\"Hello world\", display_id=\"id0\")\n\n'Hello world'\n\n\n\nhandle1 = display(\"Hello\", display_id=\"id1\")\n\n'world'\n\n\n\nhandle1.update('world')\n\n\nhandle2 = display(\"Hello world\", display_id=\"id2\")\nclear_output()  # clears all output, also with display_ids\n\n\nhandle3 = display(\"Hello world\", display_id=\"id3\")\nclear_output(wait=True)\n\n'Hello world'\n\n\n\nhandle4 = display(\"Hello\", display_id=\"id4\")\nclear_output(wait=True)\nprint('world', end='')\n\nworld\n\n\n\nhandle4.update('Hello world')  # it is cleared, so it should not show up in the above cell"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/Disable Stdin.html",
    "href": "Lib/site-packages/nbclient/tests/files/Disable Stdin.html",
    "title": "italian_lessons",
    "section": "",
    "text": "try:\n    input = raw_input\nexcept:\n    pass\n\nname = input(\"name: \")"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/Empty Cell.html",
    "href": "Lib/site-packages/nbclient/tests/files/Empty Cell.html",
    "title": "italian_lessons",
    "section": "",
    "text": "\"Code 1\"\n\n'Code 1'\n\n\n\n\"Code 2\"\n\n'Code 2'"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/Error.html",
    "href": "Lib/site-packages/nbclient/tests/files/Error.html",
    "title": "italian_lessons",
    "section": "",
    "text": "0/0\n\nZeroDivisionError: division by zero"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/Factorials.html",
    "href": "Lib/site-packages/nbclient/tests/files/Factorials.html",
    "title": "italian_lessons",
    "section": "",
    "text": "for m in range(10):\n    i, j = j, i + j\n    print(j)\n\n2\n3\n5\n8\n13\n21\n34\n55\n89\n144"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/HelloWorld.html",
    "href": "Lib/site-packages/nbclient/tests/files/HelloWorld.html",
    "title": "italian_lessons",
    "section": "",
    "text": "print(\"Hello World\")\n\nHello World"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/Inline Image.html",
    "href": "Lib/site-packages/nbclient/tests/files/Inline Image.html",
    "title": "italian_lessons",
    "section": "",
    "text": "Image('python.png')"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/Interrupt.html",
    "href": "Lib/site-packages/nbclient/tests/files/Interrupt.html",
    "title": "italian_lessons",
    "section": "",
    "text": "print(\"done\")\n\ndone"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/JupyterWidgets.html",
    "href": "Lib/site-packages/nbclient/tests/files/JupyterWidgets.html",
    "title": "italian_lessons",
    "section": "",
    "text": "# it should also handle custom msg'es\nlabel.send({'msg': 'Hello'})"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/Other Comms.html",
    "href": "Lib/site-packages/nbclient/tests/files/Other Comms.html",
    "title": "italian_lessons",
    "section": "",
    "text": "comm = Comm('this-comm-tests-a-missing-handler', data={'id': 'foo'})\n\n\ncomm.send(data={'id': 'bar'})"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/Output.html",
    "href": "Lib/site-packages/nbclient/tests/files/Output.html",
    "title": "italian_lessons",
    "section": "",
    "text": "print(\"hi\")\nwith output1:\n    print(\"in output\")\n\nhi\n\n\n\nwith output1:\n    raise ValueError(\"trigger msg_type=error\")\n\n\nimport ipywidgets as widgets\noutput2 = widgets.Output()\noutput2\n\n\n\n\n\nprint(\"hi2\")\nwith output2:\n    print(\"in output2\")\n    clear_output(wait=True)\n\nhi2\n\n\n\nimport ipywidgets as widgets\noutput3 = widgets.Output()\noutput3\n\n\n\n\n\nprint(\"hi3\")\nwith output3:\n    print(\"hello\")\n    clear_output(wait=True)\n    print(\"world\")\n\nhi3\n\n\n\nimport ipywidgets as widgets\noutput4 = widgets.Output()\noutput4\n\n\n\n\n\nprint(\"hi4\")\nwith output4:\n    print(\"hello world\")\n    clear_output()\n\nhi4\n\n\n\nimport ipywidgets as widgets\noutput5 = widgets.Output()\noutput5\n\n\n\n\n\nprint(\"hi5\")\nwith output5:\n    display(\"hello world\") # this is not a stream but plain text\nclear_output()\n\n\nimport ipywidgets as widgets\noutput_outer = widgets.Output()\noutput_inner = widgets.Output()\noutput_inner\n\n\n\n\n\noutput_outer\n\n\n\n\n\nwith output_inner:\n    print('in inner')\n    with output_outer:\n        print('in outer')\n    print('also in inner')"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/Parallel Execute A.html",
    "href": "Lib/site-packages/nbclient/tests/files/Parallel Execute A.html",
    "title": "italian_lessons",
    "section": "",
    "text": "This notebook uses a file system based “lock” to assert that two instances of the notebook kernel will run in parallel. Each instance writes to a file in a temporary directory, and then tries to read the other file from the temporary directory, so that running them in sequence will fail, but running them in parallel will succeed.\nTwo notebooks are launched, each which sets the this_notebook variable. One notebook is set to this_notebook = 'A' and the other this_notebook = 'B'.\n\nimport os\nimport os.path\nimport tempfile\nimport time\n\n\n# the variable this_notebook is injectected in a cell above by the test framework.\nthis_notebook = 'A'\nother_notebook = 'B'\ndirectory = os.environ['NBEXECUTE_TEST_PARALLEL_TMPDIR']\nwith open(os.path.join(directory, 'test_file_{}.txt'.format(this_notebook)), 'w') as f:\n    f.write('Hello from {}'.format(this_notebook))\n\n\nstart = time.time()\ntimeout = 5\nend = start + timeout\ntarget_file = os.path.join(directory, 'test_file_{}.txt'.format(other_notebook))\nwhile time.time() < end:\n    time.sleep(0.1)\n    if os.path.exists(target_file):\n        with open(target_file, 'r') as f:\n            text = f.read()\n        if text == 'Hello from {}'.format(other_notebook):\n            break\nelse:\n    assert False, \"Timed out – didn't get a message from {}\".format(other_notebook)"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/Parallel Execute B.html",
    "href": "Lib/site-packages/nbclient/tests/files/Parallel Execute B.html",
    "title": "italian_lessons",
    "section": "",
    "text": "This notebook uses a file system based “lock” to assert that two instances of the notebook kernel will run in parallel. Each instance writes to a file in a temporary directory, and then tries to read the other file from the temporary directory, so that running them in sequence will fail, but running them in parallel will succeed.\nTwo notebooks are launched, each which sets the this_notebook variable. One notebook is set to this_notebook = 'A' and the other this_notebook = 'B'.\n\nimport os\nimport os.path\nimport tempfile\nimport time\n\n\n# the variable this_notebook is injectected in a cell above by the test framework.\nthis_notebook = 'B'\nother_notebook = 'A'\ndirectory = os.environ['NBEXECUTE_TEST_PARALLEL_TMPDIR']\nwith open(os.path.join(directory, 'test_file_{}.txt'.format(this_notebook)), 'w') as f:\n    f.write('Hello from {}'.format(this_notebook))\n\n\nstart = time.time()\ntimeout = 5\nend = start + timeout\ntarget_file = os.path.join(directory, 'test_file_{}.txt'.format(other_notebook))\nwhile time.time() < end:\n    time.sleep(0.1)\n    if os.path.exists(target_file):\n        with open(target_file, 'r') as f:\n            text = f.read()\n        if text == 'Hello from {}'.format(other_notebook):\n            break\nelse:\n    assert False, \"Timed out – didn't get a message from {}\".format(other_notebook)"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/Skip Exceptions with Cell Tags.html",
    "href": "Lib/site-packages/nbclient/tests/files/Skip Exceptions with Cell Tags.html",
    "title": "italian_lessons",
    "section": "",
    "text": "print('ok')\n\nok"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/Skip Exceptions.html",
    "href": "Lib/site-packages/nbclient/tests/files/Skip Exceptions.html",
    "title": "italian_lessons",
    "section": "",
    "text": "print('ok')\n\nok"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/Skip Execution with Cell Tag.html",
    "href": "Lib/site-packages/nbclient/tests/files/Skip Execution with Cell Tag.html",
    "title": "italian_lessons",
    "section": "",
    "text": "print('ok')\n\nok"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/Sleep1s.html",
    "href": "Lib/site-packages/nbclient/tests/files/Sleep1s.html",
    "title": "italian_lessons",
    "section": "",
    "text": "t0 = datetime.datetime.utcnow()\ntime.sleep(1)\nt1 = datetime.datetime.utcnow()\n\n\ntime_format = '%Y-%m-%dT%H:%M:%S.%fZ'\nprint(t0.strftime(time_format), end='')\n\n\nprint(t1.strftime(time_format), end='')"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/SVG.html",
    "href": "Lib/site-packages/nbclient/tests/files/SVG.html",
    "title": "italian_lessons",
    "section": "",
    "text": "SVG(data='''\n<svg height=\"100\" width=\"100\">\n    <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"black\" stroke-width=\"2\" fill=\"red\" />\n</svg>''')"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/Unicode.html",
    "href": "Lib/site-packages/nbclient/tests/files/Unicode.html",
    "title": "italian_lessons",
    "section": "",
    "text": "print('☃')\n\n☃"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/UnicodePy3.html",
    "href": "Lib/site-packages/nbclient/tests/files/UnicodePy3.html",
    "title": "italian_lessons",
    "section": "",
    "text": "print('☃')\n\n☃"
  },
  {
    "objectID": "Lib/site-packages/nbclient/tests/files/update-display-id.html",
    "href": "Lib/site-packages/nbclient/tests/files/update-display-id.html",
    "title": "italian_lessons",
    "section": "",
    "text": "display('above')\ndisplay_with_id(1, 'here')\ndisplay('below')\n\n'above'\n\n\n8\n\n\n'below'\n\n\n\ndisplay_with_id(2, 'here')\ndisplay_with_id(3, 'there')\ndisplay_with_id(4, 'here')\n\n8\n\n\n6\n\n\n8\n\n\n\ndisplay_with_id(5, 'there')\ndisplay_with_id(6, 'there', update=True)\n\n6\n\n\n\ndisplay_with_id(7, 'here')\ndisplay_with_id(8, 'here', update=True)\ndisplay_with_id(9, 'result', execute_result=True)\n\n8\n\n\n10\n\n\n\ndisplay_with_id(10, 'result', update=True)"
  },
  {
    "objectID": "Lib/site-packages/nbformat-5.6.1.dist-info/licenses/COPYING.html",
    "href": "Lib/site-packages/nbformat-5.6.1.dist-info/licenses/COPYING.html",
    "title": "italian_lessons",
    "section": "",
    "text": "This project is licensed under the terms of the Modified BSD License (also known as New or Revised or 3-Clause BSD), as follows:\n\nCopyright (c) 2001-2015, IPython Development Team\nCopyright (c) 2015-, Jupyter Development Team\n\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the Jupyter Development Team nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nThe Jupyter Development Team is the set of all contributors to the Jupyter project. This includes all of the Jupyter subprojects.\nThe core team that coordinates development on GitHub can be found here: https://github.com/jupyter/.\n\n\n\nJupyter uses a shared copyright model. Each contributor maintains copyright over their contributions to Jupyter. But, it is important to note that these contributions are typically only changes to the repositories. Thus, the Jupyter source code, in its entirety is not the copyright of any single person or institution. Instead, it is the collective copyright of the entire Jupyter Development Team. If individual contributors want to maintain a record of what changes/contributions they have specific copyright on, they should indicate their copyright in the commit message of the change, when they commit the change to one of the Jupyter repositories.\nWith this in mind, the following banner should be used in any source code file to indicate the copyright and license terms:\n# Copyright (c) Jupyter Development Team.\n# Distributed under the terms of the Modified BSD License."
  },
  {
    "objectID": "Lib/site-packages/pyzmq-24.0.1.dist-info/AUTHORS.html",
    "href": "Lib/site-packages/pyzmq-24.0.1.dist-info/AUTHORS.html",
    "title": "italian_lessons",
    "section": "",
    "text": "This project was started and continues to be led by Brian E. Granger (ellisonbg AT gmail DOT com). Min Ragan-Kelley (benjaminrk AT gmail DOT com) is the primary developer of pyzmq at this time.\nThe following people have contributed to the project:\n\nAlexander Else (alexander DOT else AT team DOT telstra DOT com)\nAlexander Pyhalov (apyhalov AT gmail DOT com)\nAlexandr Emelin (frvzmb AT gmail DOT com)\nAmr Ali (amr AT ledgerx DOT com)\nAndre Caron (andre DOT l DOT caron AT gmail DOT com)\nAndrea Crotti (andrea DOT crotti DOT 0 AT gmail DOT com)\nAndrew Gwozdziewycz (git AT apgwoz DOT com)\nBaptiste Lepilleur (baptiste DOT lepilleur AT gmail DOT com)\nBrandyn A. White (bwhite AT dappervision DOT com)\nBrian E. Granger (ellisonbg AT gmail DOT com)\nBrian Hoffman (hoffman_brian AT bah DOT com)\nCarlos A. Rocha (carlos DOT rocha AT gmail DOT com)\nChris Laws (clawsicus AT gmail DOT com)\nChristian Wyglendowski (christian AT bu DOT mp)\nChristoph Gohlke (cgohlke AT uci DOT edu)\nCurtis (curtis AT tinbrain DOT net)\nCyril Holweck (cyril DOT holweck AT free DOT fr)\nDan Colish (dcolish AT gmail DOT com)\nDaniel Lundin (dln AT eintr DOT org)\nDaniel Truemper (truemped AT googlemail DOT com)\nDouglas Creager (douglas DOT creager AT redjack DOT com)\nEduardo Stalinho (eduardooc DOT 86 AT gmail DOT com)\nEren Güven (erenguven0 AT gmail DOT com)\nErick Tryzelaar (erick DOT tryzelaar AT gmail DOT com)\nErik Tollerud (erik DOT tollerud AT gmail DOT com)\nFELD Boris (lothiraldan AT gmail DOT com)\nFantix King (fantix DOT king AT gmail DOT com)\nFelipe Cruz (felipecruz AT loogica DOT net)\nFernando Perez (Fernando DOT Perez AT berkeley DOT edu)\nFrank Wiles (frank AT revsys DOT com)\nFélix-Antoine Fortin (felix DOT antoine DOT fortin AT gmail DOT com)\nGavrie Philipson (gavriep AT il DOT ibm DOT com)\nGodefroid Chapelle (gotcha AT bubblenet DOT be)\nGreg Banks (gbanks AT mybasis DOT com)\nGreg Ward (greg AT gerg DOT ca)\nGuido Goldstein (github AT a-nugget DOT de)\nIan Lee (IanLee1521 AT gmail DOT com)\nIonuț Arțăriși (ionut AT artarisi DOT eu)\nIvo Danihelka (ivo AT danihelka DOT net)\nIyed (iyed DOT bennour AT gmail DOT com)\nJim Garrison (jim AT garrison DOT cc)\nJohn Gallagher (johnkgallagher AT gmail DOT com)\nJulian Taylor (jtaylor DOT debian AT googlemail DOT com)\nJustin Bronder (jsbronder AT gmail DOT com)\nJustin Riley (justin DOT t DOT riley AT gmail DOT com)\nMarc Abramowitz (marc AT marc-abramowitz DOT com)\nMatthew Aburn (mattja6 AT gmail DOT com)\nMichel Pelletier (pelletier DOT michel AT gmail DOT com)\nMichel Zou (xantares09 AT hotmail DOT com)\nMin Ragan-Kelley (benjaminrk AT gmail DOT com)\nNell Hardcastle (nell AT dev-nell DOT com)\nNicholas Pilkington (nicholas DOT pilkington AT gmail DOT com)\nNicholas Piël (nicholas AT nichol DOT as)\nNick Pellegrino (npellegrino AT mozilla DOT com)\nNicolas Delaby (nicolas DOT delaby AT ezeep DOT com)\nOndrej Certik (ondrej AT certik DOT cz)\nPaul Colomiets (paul AT colomiets DOT name)\nPawel Jasinski (pawel DOT jasinski AT gmail DOT com)\nPhus Lu (phus DOT lu AT gmail DOT com)\nRobert Buchholz (rbu AT goodpoint DOT de)\nRobert Jordens (jordens AT gmail DOT com)\nRyan Cox (ryan DOT a DOT cox AT gmail DOT com)\nRyan Kelly (ryan AT rfk DOT id DOT au)\nScott Maxwell (scott AT codecobblers DOT com)\nScott Sadler (github AT mashi DOT org)\nSimon Knight (simon DOT knight AT gmail DOT com)\nStefan Friesel (sf AT cloudcontrol DOT de)\nStefan van der Walt (stefan AT sun DOT ac DOT za)\nStephen Diehl (stephen DOT m DOT diehl AT gmail DOT com)\nSylvain Corlay (scorlay AT bloomberg DOT net)\nThomas Kluyver (takowl AT gmail DOT com)\nThomas Spura (tomspur AT fedoraproject DOT org)\nTigger Bear (Tigger AT Tiggers-Mac-mini DOT local)\nTorsten Landschoff (torsten DOT landschoff AT dynamore DOT de)\nVadim Markovtsev (v DOT markovtsev AT samsung DOT com)\nYannick Hold (yannickhold AT gmail DOT com)\nZbigniew Jędrzejewski-Szmek (zbyszek AT in DOT waw DOT pl)\nhugo shi (hugoshi AT bleb2 DOT (none))\njdgleeson (jdgleeson AT mac DOT com)\nkyledj (kyle AT bucebuce DOT com)\nspez (steve AT hipmunk DOT com)\nstu (stuart DOT axon AT jpcreative DOT co DOT uk)\nxantares (xantares AT fujitsu-l64 DOT (none))\n\nas reported by:\ngit log --all --format='- %aN (%aE)' | sort -u | sed 's/@/ AT /1' | sed -e 's/\\.\\([^ ]\\)/ DOT \\1/g'\nwith some adjustments.\n\n\n\nBrandon Craig-Rhodes (brandon AT rhodesmill DOT org)\nEugene Chernyshov (chernyshov DOT eugene AT gmail DOT com)\nCraig Austin (craig DOT austin AT gmail DOT com)\n\n\n\n\n\nTravis Cline (travis DOT cline AT gmail DOT com)\nRyan Kelly (ryan AT rfk DOT id DOT au)\nZachary Voase (z AT zacharyvoase DOT com)"
  },
  {
    "objectID": "Lib/site-packages/soupsieve-2.3.2.post1.dist-info/license_files/LICENSE.html",
    "href": "Lib/site-packages/soupsieve-2.3.2.post1.dist-info/license_files/LICENSE.html",
    "title": "italian_lessons",
    "section": "",
    "text": "Copyright (c) 2018 - 2022 Isaac Muse isaacmuse@gmail.com\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "Lib/site-packages/traitlets-5.4.0.dist-info/licenses/COPYING.html",
    "href": "Lib/site-packages/traitlets-5.4.0.dist-info/licenses/COPYING.html",
    "title": "italian_lessons",
    "section": "",
    "text": "Traitlets is adapted from enthought.traits, Copyright (c) Enthought, Inc., under the terms of the Modified BSD License.\nThis project is licensed under the terms of the Modified BSD License (also known as New or Revised or 3-Clause BSD), as follows:\n\nCopyright (c) 2001-, IPython Development Team\n\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the IPython Development Team nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nThe IPython Development Team is the set of all contributors to the IPython project. This includes all of the IPython subprojects.\nThe core team that coordinates development on GitHub can be found here: https://github.com/jupyter/.\n\n\n\nIPython uses a shared copyright model. Each contributor maintains copyright over their contributions to IPython. But, it is important to note that these contributions are typically only changes to the repositories. Thus, the IPython source code, in its entirety is not the copyright of any single person or institution. Instead, it is the collective copyright of the entire IPython Development Team. If individual contributors want to maintain a record of what changes/contributions they have specific copyright on, they should indicate their copyright in the commit message of the change, when they commit the change to one of the IPython repositories.\nWith this in mind, the following banner should be used in any source code file to indicate the copyright and license terms:\n# Copyright (c) IPython Development Team.\n# Distributed under the terms of the Modified BSD License."
  },
  {
    "objectID": "posts/Lesson 1/01_lesson.html",
    "href": "posts/Lesson 1/01_lesson.html",
    "title": "Lesson 1",
    "section": "",
    "text": "Alphabet\n\n# import libraries\nimport gtts, string, IPython, os  \nimport ipywidgets as widgets\n\nos.makedirs(\"alphabet_audio\", exist_ok = True) # make folder for alphabet audio\nletters = list(string.ascii_lowercase) # get letters (ascii is ok because alphabets are the same)\n\ndef save_text_mp3(text: str, loc: str, lang: str = \"it\"): gtts.gTTS(text, lang = \"it\").save(loc)    \n\n\nfor l in letters: save_text_mp3(l, f\"alphabet_audio/{l}.mp3\") # save all letters\n\n\n\n\n\n\n\nfor l in [\"a\", \"c\", \"j\", \"k\", \"h\", \"i\"]:\n    display(l, IPython.display.Audio(f\"alphabet_audio/{l}.mp3\"))    \n\n'a'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n'c'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n'j'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n'k'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n'h'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n'i'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n\n\nCommon Sounds\n\nos.makedirs(\"common_sounds\", exist_ok = True)\n\nsounds = [\"cli\", \"gh\", \"gi\", \"gli\", \"cc\", \"ch\"]\nfor s in sounds: \n    save_text_mp3(s, f\"common_sounds/{s}.mp3\")\n    display(s, IPython.display.Audio(f\"common_sounds/{s}.mp3\"))\n\n'cli'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n'gh'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n'gi'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n'gli'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n'cc'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n'ch'\n\n\n\n                \n                    \n                    Your browser does not support the audio element."
  },
  {
    "objectID": "posts/Lesson 2/02_lesson.html",
    "href": "posts/Lesson 2/02_lesson.html",
    "title": "Lesson 2",
    "section": "",
    "text": "Notebook for documenting lesson 2 of my Italian learning journey. This loosely follows Chapter 1 of the book.\nThe class was on 21st September but I’m not finishing this until 6th October, mostly due to issues getting python working how I wanted."
  },
  {
    "objectID": "posts/Lesson 2/02_lesson.html#packaging",
    "href": "posts/Lesson 2/02_lesson.html#packaging",
    "title": "Lesson 2",
    "section": "Packaging",
    "text": "Packaging\nEssentially, I wanted to set it up as a package so that I had util functions in the repository, e.g. for getting a widget to say a word out loud. This has been a bit of a nightmare.\nFirst things first, it took me absolutely forever to work out how to have a package that worked alongside quarto. I spent ages trying to get nbdev to work, but couldn’t for the life of me and ended up giving up and reverting to the pip/setuptools that I know already.\nAfter literally hours that I wanted to be learning Italian but instead spent relearning python, I have it working. I’ll be adding functions to learnitalian throughout, so the exact structure is going to change.\nI feel like I’m finally properly getting started now :)\n\nimport pandas as pd\n\nfrom learnitalian.speak import *\n\n\nsay_word(\"mamma mia\")\n\n'mamma mia'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n\nsay_word(\"thank fuck\", lang = \"en\")\n\n'thank fuck'\n\n\n\n                \n                    \n                    Your browser does not support the audio element."
  },
  {
    "objectID": "posts/Lesson 2/02_lesson.html#translations",
    "href": "posts/Lesson 2/02_lesson.html#translations",
    "title": "Lesson 2",
    "section": "Translations",
    "text": "Translations\nHad a nightmare getting python to translate. You would have thought that in 2022 that this would be easy, but it ended up being a real headache.\nAt first the below package googletrans wouldn’t install on conda… then would with pip but had an error… which then required reinstalling a certain version. In between this I decided it would be easier to use googlecloud apis directly, but after trying I realised their api is fucking terrible so gave up.\nWell, finally the below works. At some point, possibly by the time this is being read, I plan to make util functions that take a given english string and return the italian text & speech translation\n\nfrom googletrans import Translator\ntranslator = Translator()\ntranslator.translate(\"this is a test\", dest = \"it\").text\n\n'questo è un test'\n\n\nBefore starting this lesson, I’m going to read an italian dictionary from which I’ll take example words. These have been downloaded from http://www.gwicks.net/dictionaries.htm. Some of these words I’ll use later when testing rules for nouns.\n\ndef get_words(loc=os.path.join(\"C:\\projects\\italianlessons\\dictionary\\italiano.txt\")):\n    with open(loc) as dic: return pd.Series(dic.read().split(\"\\n\"))\n\nwords = get_words()"
  },
  {
    "objectID": "posts/Lesson 2/02_lesson.html#irregular-nouns",
    "href": "posts/Lesson 2/02_lesson.html#irregular-nouns",
    "title": "Lesson 2",
    "section": "Irregular Nouns",
    "text": "Irregular Nouns\n\nSome feminine nouns end in -o; their plural form ends in -o or -i\nSome masculine singular nouns end in-a.Their plural always ends in -i\nNouns ending in -e can be both masculine and feminine; their plurals end in -i\nMasculine Nouns ending in – ore – one – ale – ile : MASCULINE: FEMININE:\nFeminine Nouns ending in – one and – ice. The – e ending changes to – i in the plural\nForeign Nouns\nMasculine and Feminine nouns ending in – ista\nFeminine nouns ending in – tà and – tù\nFeminine nouns ending in – cia and – gia\nMASCULINE NOUNS ENDING IN – CO AND – GO\nFeminine nouns ending in – ca and – ga in the singular change their ending in – che and – ghe in the plural.\nMasculine singular nouns with the feminine plural form\n\n1, 2 and 3 are documented below with examples. I ran out of steam for the rest. The article is great; will consider going back to this resource.\n\n1. Some feminine nouns end in -o; their plural form ends in -o or -i\n\ndef add_extras(df):\n    df[\"full_string\"] = df[\"Article\"] + \" \" + df[\"Word\"]\n    df[\"english\"] = [translator.translate(s, dest = \"en\", src = \"it\").text for s in df[\"full_string\"]]\n    return df\n\n\n_01_ex = pd.DataFrame({\n    \"Grammatical Class\": [\"Singular\"] * 3 + [\"Plural\"] * 3,\n    \"Article\": [\"La\"] * 3 + [\"Le\"] * 3,\n    \"Word\": [\"Mano\", \"Radio\", \"Molto\", \"Mani\", \"Radio\", \"Molto\"]\n})\n_01_ex = add_extras(_01_ex)\n\n\n[display(x) for _, x in _01_ex.groupby('Grammatical Class')];\nsay_word(\"Le Mani\")\nsay_word(\"La Mano\")\n\n\n\n\n\n  \n    \n      \n      Grammatical Class\n      Article\n      Word\n      full_string\n      english\n    \n  \n  \n    \n      3\n      Plural\n      Le\n      Mani\n      Le Mani\n      The hands\n    \n    \n      4\n      Plural\n      Le\n      Radio\n      Le Radio\n      Radios\n    \n    \n      5\n      Plural\n      Le\n      Molto\n      Le Molto\n      The Much\n    \n  \n\n\n\n\n\n\n\n\n  \n    \n      \n      Grammatical Class\n      Article\n      Word\n      full_string\n      english\n    \n  \n  \n    \n      0\n      Singular\n      La\n      Mano\n      La Mano\n      The hand\n    \n    \n      1\n      Singular\n      La\n      Radio\n      La Radio\n      Radio\n    \n    \n      2\n      Singular\n      La\n      Molto\n      La Molto\n      The Very\n    \n  \n\n\n\n\n'Le Mani'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n'La Mano'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n\n\n2. Some masculine singular nouns end in -a. Their plural always ends in -i\n\n_02_ex = pd.DataFrame({\n    \"Grammatical Class\": [\"Singular\"] * 4 + [\"Plural\"] * 4,\n    \"Article\": [\"Il\"] * 4 + [\"I\"] * 4,\n    \"Word\": [\"Problema\", \"Sistema\", \"Poeta\", \"Programma\", \"Problemi\", \"Sistemi\", \"Poeti\", \"Programmi\"]\n})\n_02_ex = add_extras(_02_ex)\n\n\n[display(x) for _, x in _02_ex.groupby('Grammatical Class')];\nsay_word(\"Il Programma\")\nsay_word(\"I Programi\")\n\n\n\n\n\n  \n    \n      \n      Grammatical Class\n      Article\n      Word\n      full_string\n      english\n    \n  \n  \n    \n      4\n      Plural\n      I\n      Problemi\n      I Problemi\n      Problems\n    \n    \n      5\n      Plural\n      I\n      Sistemi\n      I Sistemi\n      The Systems\n    \n    \n      6\n      Plural\n      I\n      Poeti\n      I Poeti\n      The poets\n    \n    \n      7\n      Plural\n      I\n      Programmi\n      I Programmi\n      The programs\n    \n  \n\n\n\n\n\n\n\n\n  \n    \n      \n      Grammatical Class\n      Article\n      Word\n      full_string\n      english\n    \n  \n  \n    \n      0\n      Singular\n      Il\n      Problema\n      Il Problema\n      The problem\n    \n    \n      1\n      Singular\n      Il\n      Sistema\n      Il Sistema\n      The system\n    \n    \n      2\n      Singular\n      Il\n      Poeta\n      Il Poeta\n      The poet\n    \n    \n      3\n      Singular\n      Il\n      Programma\n      Il Programma\n      The program\n    \n  \n\n\n\n\n'Il Programma'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n'I Programi'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n\n\n3. Nouns ending in -e can be both masculine and feminine; their plurals end in -i\n\n_03_ex = pd.DataFrame({\n    \"Grammatical Class\": [\"Singular\"] * 3 + [\"Plural\"] * 3,\n    \"Article\": [\"Lo\", \"Il\", \"Il\", \"Gli\", \"I\", \"I\"],\n    \"Word\": [\"Studente\", \"Bicchiere\", \"Nome\", \"Studenti\", \"Bicchieri\", \"Nomi\"]\n})\n_03_ex = add_extras(_03_ex)\n\n\n[display(x) for _, x in _02_ex.groupby('Grammatical Class')];\nsay_word(\"Lo Studente\")\nsay_word(\"Gli Studenti\")\n\n\n\n\n\n  \n    \n      \n      Grammatical Class\n      Article\n      Word\n      full_string\n      english\n    \n  \n  \n    \n      4\n      Plural\n      I\n      Problemi\n      I Problemi\n      Problems\n    \n    \n      5\n      Plural\n      I\n      Sistemi\n      I Sistemi\n      The Systems\n    \n    \n      6\n      Plural\n      I\n      Poeti\n      I Poeti\n      The poets\n    \n    \n      7\n      Plural\n      I\n      Programmi\n      I Programmi\n      The programs\n    \n  \n\n\n\n\n\n\n\n\n  \n    \n      \n      Grammatical Class\n      Article\n      Word\n      full_string\n      english\n    \n  \n  \n    \n      0\n      Singular\n      Il\n      Problema\n      Il Problema\n      The problem\n    \n    \n      1\n      Singular\n      Il\n      Sistema\n      Il Sistema\n      The system\n    \n    \n      2\n      Singular\n      Il\n      Poeta\n      Il Poeta\n      The poet\n    \n    \n      3\n      Singular\n      Il\n      Programma\n      Il Programma\n      The program\n    \n  \n\n\n\n\n'Lo Studente'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n'Gli Studenti'\n\n\n\n                \n                    \n                    Your browser does not support the audio element."
  },
  {
    "objectID": "posts/Lesson 3/Lesson 3.html",
    "href": "posts/Lesson 3/Lesson 3.html",
    "title": "Lesson 3",
    "section": "",
    "text": "Lesson 3. Class was on 28th September, I’m writing this up on 11th August. This loosely follows Chapter 2 of the book."
  },
  {
    "objectID": "posts/Lesson 3/Lesson 3.html#some-examples",
    "href": "posts/Lesson 3/Lesson 3.html#some-examples",
    "title": "Lesson 3",
    "section": "Some examples…",
    "text": "Some examples…\nPrint some examples for the blog. These are taken from the book.\nWeirdly, the example for Un’ (Un’agenda) translates to ‘an agenda’, when the picture in the book looks more like diary. Can’t work a more appropriate translation but this doesn’t feel like it’s worked properly.\n\ndef print_and_translate(word, translator=translator):\n    print(translator.translate(word, dest = \"en\").text)\n    say_word(word)\n\n\nprint_and_translate(\"Un Letto\")\n\nA bed\n\n\n'Un Letto'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n\nprint_and_translate(\"Uno Specchio\")\n\nA mirror\n\n\n'Uno Specchio'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n\nprint_and_translate(\"Una Lampada\")\n\nA lamp\n\n\n'Una Lampada'\n\n\n\n                \n                    \n                    Your browser does not support the audio element.\n                \n              \n\n\n\nprint_and_translate(\"Un'agenda\")\n\nAn agenda\n\n\n\"Un'agenda\"\n\n\n\n                \n                    \n                    Your browser does not support the audio element."
  }
]